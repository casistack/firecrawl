FROM node:22-slim AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV NODE_OPTIONS="--max-old-space-size=4096"
LABEL fly_launch_runtime="Node.js"

# Install necessary dependencies and make sure corepack is up to date
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates git curl build-essential pkg-config && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    npm i -g corepack@latest && \
    corepack enable && \
    corepack prepare pnpm@latest --activate

# Install Rust for native library
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path \
    && chmod -R a+w $RUSTUP_HOME $CARGO_HOME

COPY . /app
WORKDIR /app

FROM base AS build
# Completely bypass BuildKit cache mechanism to avoid JSON corruption
RUN mkdir -p /tmp/pnpm-store /tmp/cargo-cache /tmp/native-target && \
    pnpm config set store-dir /tmp/pnpm-store && \
    pnpm config set network-timeout 300000 && \
    CARGO_HOME=/tmp/cargo-cache CARGO_TARGET_DIR=/tmp/native-target \
    pnpm install --network-concurrency 1 --no-verify-store-integrity && \
    CARGO_HOME=/tmp/cargo-cache CARGO_TARGET_DIR=/tmp/native-target \
    pnpm run build && \
    pnpm prune --prod --ignore-scripts

# Go stage updated to match repository version
FROM golang:1.24 AS go-base
COPY sharedLibs/go-html-to-md /app/sharedLibs/go-html-to-md

RUN cd /app/sharedLibs/go-html-to-md && \
    go mod download && \
    go build -o libhtml-to-markdown.so -buildmode=c-shared html-to-markdown.go && \
    chmod +x libhtml-to-markdown.so

# Runtime stage
FROM base AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    git \
    procps \
    && rm -rf /var/lib/apt/lists/*

EXPOSE 8080
WORKDIR /app

# Copy built application
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/dist ./dist
COPY --from=build /app/native ./native

# Copy Go shared library
COPY --from=go-base /app/sharedLibs/go-html-to-md/libhtml-to-markdown.so ./sharedLibs/go-html-to-md/

CMD ["node", "dist/src/harness.js", "--start-docker"]
