FROM node:22-slim AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV NODE_OPTIONS="--max-old-space-size=4096"
LABEL fly_launch_runtime="Node.js"

# Install necessary dependencies and make sure corepack is up to date
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    npm i -g corepack@latest && \
    corepack enable && \
    corepack prepare pnpm@latest --activate

COPY . /app
WORKDIR /app

FROM base AS prod-deps
# Completely bypass BuildKit cache mechanism to avoid JSON corruption
RUN mkdir -p /tmp/pnpm-store && \
    pnpm config set store-dir /tmp/pnpm-store && \
    pnpm config set network-timeout 300000 && \
    pnpm install --prod --frozen-lockfile --network-concurrency 1 --no-verify-store-integrity

FROM base AS build
# Completely bypass BuildKit cache mechanism to avoid JSON corruption
RUN mkdir -p /tmp/pnpm-store && \
    pnpm config set store-dir /tmp/pnpm-store && \
    pnpm config set network-timeout 300000 && \
    pnpm install --network-concurrency 1 --no-verify-store-integrity && \
    pnpm run build

# Go stage updated to match repository version
FROM golang:1.24 AS go-base
COPY sharedLibs/go-html-to-md /app/sharedLibs/go-html-to-md

RUN cd /app/sharedLibs/go-html-to-md && \
    go mod tidy && \
    go build -o html-to-markdown.so -buildmode=c-shared html-to-markdown.go && \
    chmod +x html-to-markdown.so

# Install Rust - updated to match repository version
FROM rust:1-slim AS rust-base
COPY sharedLibs/html-transformer /app/sharedLibs/html-transformer

# Install Rust dependencies and build transformer lib
RUN cd /app/sharedLibs/html-transformer && \
    cargo build --release && \
    chmod +x target/release/libhtml_transformer.so

FROM base
COPY --from=build /app/dist /app/dist
COPY --from=prod-deps /app/node_modules /app/node_modules
COPY --from=go-base /app/sharedLibs/go-html-to-md/html-to-markdown.so /app/sharedLibs/go-html-to-md/html-to-markdown.so
COPY --from=rust-base /app/sharedLibs/html-transformer/target/release/libhtml_transformer.so /app/sharedLibs/html-transformer/target/release/libhtml_transformer.so

# Install git
RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*

# Start the server by default, this can be overwritten at runtime
EXPOSE 8080
ENV PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium"

# Make sure the entrypoint script has the correct line endings and is executable
RUN sed -i 's/\r$//' /app/docker-entrypoint.sh && \
    chmod +x /app/docker-entrypoint.sh

ENTRYPOINT ["/bin/bash", "/app/docker-entrypoint.sh"]
